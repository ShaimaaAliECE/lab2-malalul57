{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["Hole","props","className","value","Slat","onClick","handleClick","Array","holes","length","map","x","j","Board","state","boardState","fill","playerTurn","gameMode","gameSelected","winner","mode","this","setState","slatID","boardCopy","arr","slice","indexOf","newSlat","reverse","makeMove","bs","c","r","checkLine","checkWinner","validMove","slat","Math","floor","random","winnerMessageStyle","slats","i","selectedGame","Component","App","src","logo","alt","a","b","d","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e570d0f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nfunction Hole(props){\n  return <div className=\"Hole\"><div className={props.value}></div></div>\n}\n\nfunction Slat(props){\n    return <div className=\"Slat\" onClick={() => props.handleClick()}>\n      {[...Array(props.holes.length)].map((x, j) => \n        <Hole key={j} value={props.holes[j]}></Hole>)}\n      </div>\n }\n\nclass Board extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      boardState: new Array(7).fill(new Array(6).fill(null)),\n      playerTurn: 'Red',\n      gameMode: '',\n      gameSelected: false,\n      winner: ''\n    }\n  }\n\n  selectedGame(mode){\n    this.setState({\n       gameMode: mode,\n       gameSelected: true, \n       boardState: new Array(7).fill(new Array(6).fill(null))\n    })\n  }\n\n  makeMove(slatID){\n    const boardCopy = this.state.boardState.map(function(arr) {\n      return arr.slice();\n    });\n    if( boardCopy[slatID].indexOf(null) !== -1 ){\n      let newSlat = boardCopy[slatID].reverse()\n      newSlat[newSlat.indexOf(null)] = this.state.playerTurn\n      newSlat.reverse()\n      this.setState({\n        playerTurn: (this.state.playerTurn === 'Red') ? 'Yellow' : 'Red',\n        boardState: boardCopy\n      })\n    }\n  }\n\n  /*Only make moves if winner doesn't exist*/\n  handleClick(slatID) {\n    if(this.state.winner === ''){\n      this.makeMove(slatID)\n    }\n  }\n  \n  /*check the winner and make AI move IF game is in AI mode*/\n  componentDidUpdate(){\n    let winner = checkWinner(this.state.boardState)\n    if(this.state.winner !== winner){\n      this.setState({winner: winner})\n    } else {\n       if(this.state.gameMode === 'ai' && this.state.playerTurn === 'Blue'){\n        let validMove = -1;\n        while(validMove === -1){\n          let slat = Math.floor((Math.random() * 7))\n          if(this.state.boardState[slat].indexOf(null) !== -1){\n            validMove = slat\n          }else{\n            validMove = -1\n          }\n        }\n        this.makeMove(validMove)\n       }\n    }\n  }\n\n  render(){\n\n    /*If a winner exists display the name*/\n    let winnerMessageStyle\n    if(this.state.winner !== \"\"){\n      winnerMessageStyle = \"winnerMessage appear\"\n    }else {\n      winnerMessageStyle = \"winnerMessage\"\n    }\n\n    /*Contruct slats allocating column from board*/\n    let slats = [...Array(this.state.boardState.length)].map((x, i) => \n      <Slat \n          key={i}\n          holes={this.state.boardState[i]}\n          handleClick={() => this.handleClick(i)}\n      ></Slat>\n    )\n\n    return (\n      <div>\n        {this.state.gameSelected &&\n          <div className=\"Board\">\n            {slats}\n          </div>\n        }\n        <div className={winnerMessageStyle}>{this.state.winner}</div>\n        {(!this.state.gameSelected || this.state.winner !== '') &&\n          <div>\n            <button onClick={() => this.selectedGame('human')}>Play Human</button>\n            <button onClick={() => this.selectedGame('ai')}>Play AI</button>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Griderator</h2>\n        </div>\n        <div className=\"Game\">\n          <Board></Board>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction checkLine(a,b,c,d) {\n    return ((a !== null) && (a === b) && (a === c) && (a === d));\n}\n\nfunction checkWinner(bs) {\n    for (let c = 0; c < 7; c++)\n        for (let r = 0; r < 4; r++)\n            if (checkLine(bs[c][r], bs[c][r+1], bs[c][r+2], bs[c][r+3]))\n                return bs[c][r] + ' wins!'\n\n    for (let r = 0; r < 6; r++)\n         for (let c = 0; c < 4; c++)\n             if (checkLine(bs[c][r], bs[c+1][r], bs[c+2][r], bs[c+3][r]))\n                 return bs[c][r] + ' wins!'\n\n    for (let r = 0; r < 3; r++)\n         for (let c = 0; c < 4; c++)\n             if (checkLine(bs[c][r], bs[c+1][r+1], bs[c+2][r+2], bs[c+3][r+3]))\n                 return bs[c][r] + ' wins!'\n\n    for (let r = 0; r < 4; r++)\n         for (let c = 3; c < 6; c++)\n             if (checkLine(bs[c][r], bs[c-1][r+1], bs[c-2][r+2], bs[c-3][r+3]))\n                 return bs[c][r] + ' wins!'\n\n    return \"\";\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}